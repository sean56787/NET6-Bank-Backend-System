// <auto-generated />
using System;
using DotNetSandbox.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetSandbox.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250816162914_0817")]
    partial class _0817
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("DotNetSandbox.Models.Data.BalanceLog", b =>
                {
                    b.Property<int>("BalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("BalanceBefore")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BalanceId");

                    b.HasIndex("UserId");

                    b.ToTable("BalanceLogs");
                });

            modelBuilder.Entity("DotNetSandbox.Models.Data.TransferLog", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FromBalanceLogId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToBalanceLogId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TransferId");

                    b.HasIndex("FromBalanceLogId");

                    b.HasIndex("ToBalanceLogId");

                    b.HasIndex("UserId");

                    b.ToTable("TransferLogs");
                });

            modelBuilder.Entity("DotNetSandbox.Models.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DotNetSandbox.Models.Data.BalanceLog", b =>
                {
                    b.HasOne("DotNetSandbox.Models.Data.User", "User")
                        .WithMany("BalanceLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetSandbox.Models.Data.TransferLog", b =>
                {
                    b.HasOne("DotNetSandbox.Models.Data.BalanceLog", "FromBalanceLog")
                        .WithMany()
                        .HasForeignKey("FromBalanceLogId");

                    b.HasOne("DotNetSandbox.Models.Data.BalanceLog", "ToBalanceLog")
                        .WithMany()
                        .HasForeignKey("ToBalanceLogId");

                    b.HasOne("DotNetSandbox.Models.Data.User", null)
                        .WithMany("TransferLog")
                        .HasForeignKey("UserId");

                    b.Navigation("FromBalanceLog");

                    b.Navigation("ToBalanceLog");
                });

            modelBuilder.Entity("DotNetSandbox.Models.Data.User", b =>
                {
                    b.Navigation("BalanceLogs");

                    b.Navigation("TransferLog");
                });
#pragma warning restore 612, 618
        }
    }
}
